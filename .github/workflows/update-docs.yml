name: Update Tracking Docs

on:
    workflow_dispatch:
    # --- Run once a week --- #
    schedule:
        - cron: "0 0 * * 0"

permissions:
    contents: write
    pull-requests: write
    issues: read

jobs:
    update-docs:
        runs-on: ubuntu-latest
        steps:
            # --- Checkout main branch ---
            - uses: actions/checkout@v4
              with:
                  ref: main

            # --- Install GH CLI and jq ---
            - name: Install GH CLI and jq
              run: |
                  sudo apt-get update -y
                  sudo apt-get install -y gh jq

            # --- Collect Issues ---
            - name: Collect Issues
              env:
                  GH_TOKEN: ${{ secrets.GH_PAT }}
              run: |
                  OWNER=$(echo $GITHUB_REPOSITORY | cut -d'/' -f1)
                  REPO=$(echo $GITHUB_REPOSITORY | cut -d'/' -f2)
                  gh api repos/$OWNER/$REPO/issues?state=all --paginate \
                    --jq '[.[] | select(.pull_request == null) | {number, title, state, url: .html_url, labels: [.labels[].name], closed_at, created_at, pull_request}]' \
                    > issues.json

            # --- Stop if no open issues ---
            - name: Check for open issues
              id: check-issues
              run: |
                  OPEN_COUNT=$(jq '[.[] | select(.state != "closed")] | length' issues.json)
                  echo "open_issues=$OPEN_COUNT" >> $GITHUB_OUTPUT
            - name: Stop if no open issues
              if: steps.check-issues.outputs.open_issues == '0'
              run: |
                  echo "No open issues. Exiting."
                  exit 0

            # --- Make scripts executable ---
            - name: Make scripts executable
              run: chmod +x .github/scripts/*.sh

            # --- Backup and generate docs ---
            - name: Backup and generate docs
              run: |
                  ./.github/scripts/backup-docs.sh
                  ./.github/scripts/update-docs.sh

            # --- Commit only updated files ---
            - name: Commit docs
              run: |
                  git config user.name "GitHub Actions Bot"
                  git config user.email "actions@github.com"

                  # Only stage the files the workflow updates
                  git add Changelog.md Todo.md .tracking/

                  if ! git diff --cached --quiet; then
                      git commit -m "docs: update tracking documentation"
                      git push origin main
                  else
                      echo "No changes to commit"
                  fi
