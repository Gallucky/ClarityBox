name: Update Tracking Docs

on:
    workflow_dispatch:
    schedule:
        - cron: "0 0 * * 0" # weekly

permissions:
    contents: write
    pull-requests: write
    issues: read

jobs:
    update-docs:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Install GH CLI and jq
              run: |
                  sudo apt-get update -y
                  sudo apt-get install -y gh jq

            - name: Collect Issues
              env:
                  GH_TOKEN: ${{ secrets.GH_PAT }}
              run: |
                  OWNER=$(echo $GITHUB_REPOSITORY | cut -d'/' -f1)
                  REPO=$(echo $GITHUB_REPOSITORY | cut -d'/' -f2)
                  gh api repos/$OWNER/$REPO/issues?state=all --paginate \
                    --jq '[.[] | select(.pull_request == null) | {number, title, state, url: .html_url, labels: [.labels[].name], closed_at, created_at, pull_request}]' \
                    > issues.json

            - name: Stop if no open issues
              id: check-issues
              run: |
                  OPEN_COUNT=$(jq '[.[] | select(.state != "closed")] | length' issues.json)
                  echo "open_issues=$OPEN_COUNT" >> $GITHUB_OUTPUT
            - name: Exit if none
              if: steps.check-issues.outputs.open_issues == '0'
              run: exit 0

            - name: Make scripts executable
              run: chmod +x .github/scripts/*.sh

            # --- Backup current docs locally ---
            - name: Backup current docs
              run: ./.github/scripts/backup-docs.sh

            # --- Generate new docs ---
            - name: Generate docs
              run: ./.github/scripts/update-docs.sh

            # --- Commit updates to dev branch ---
            - name: Commit updates to dev
              run: |
                  git config user.name "GitHub Actions Bot"
                  git config user.email "actions@github.com"
                  git checkout dev
                  git add Changelog.md Todo.md
                  if ! git diff --cached --quiet; then
                    git commit -m "docs: update tracking documentation"
                    git push origin dev
                  else
                    echo "No changes to commit"
                  fi

            # --- Commit backups to tracking branch ---
            - name: Checkout tracking branch
              uses: actions/checkout@v4
              with:
                  ref: tracking
                  path: tracking-branch # separate folder

            - name: Copy backups to tracking branch
              run: |
                  cp -r .tracking/* tracking-branch/.tracking/
                  cd tracking-branch
                  git config user.name "GitHub Actions Bot"
                  git config user.email "actions@github.com"
                  git add .tracking
                  if ! git diff --cached --quiet; then
                    TIMESTAMP=$(date +'%d-%m-%Y_%H-%M-%S')
                    git commit -m "backup: docs backup $TIMESTAMP - $GITHUB_SHA"
                    git push origin tracking
                  else
                    echo "No backups to commit"
                  fi
