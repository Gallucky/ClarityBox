name: Update Tracking Docs

on:
    push:
        branches: [main]
        paths-ignore:
            - "Changelog.md"
            - "Todo.md"
    issues:
        types: [opened, closed, reopened, labeled, unlabeled, edited]

permissions:
    contents: write
    pull-requests: write
    issues: read

jobs:
    update-docs:
        runs-on: ubuntu-latest
        steps:
            # --- Checkout repo ---
            - uses: actions/checkout@v4

            # --- Install GH CLI and jq ---
            - name: Install GH CLI and jq
              run: |
                  sudo apt-get update
                  sudo apt-get install -y gh jq

            # --- Collect Issues ---
            - name: Collect Issues
              env:
                  GH_TOKEN: ${{ secrets.GH_PAT }}
              run: |
                  OWNER=$(echo $GITHUB_REPOSITORY | cut -d'/' -f1)
                  REPO=$(echo $GITHUB_REPOSITORY | cut -d'/' -f2)

                  # Fetch issues safely, excluding pull requests
                  gh api repos/$OWNER/$REPO/issues?state=all --paginate \
                    --jq '[.[] | select(.pull_request == null) | {number, title, state, url: .html_url, labels: [.labels[].name], closed_at, created_at, pull_request}]' \
                    > issues.json || { echo "Failed to fetch issues"; exit 1; }

                  # Validate JSON
                  jq empty issues.json || { echo "issues.json is not valid JSON"; exit 1; }

            # --- Make scripts executable ---
            - name: Make scripts executable
              run: chmod +x .github/scripts/*.sh

            # --- Backup and commit docs ---
            - name: Backup and commit docs
              run: |
                  # Run the backup script (creates backup folder, ignores .gitkeep, prunes old)
                  ./.github/scripts/backup-docs.sh

                  # Configure Git identity for this workflow run
                  git config user.name "GitHub Actions Bot"
                  git config user.email "actions@github.com"

                  # Ensure .tracking is tracked in Git
                  git add .tracking/.gitkeep

                  # Add all new backups (ignores .gitkeep)
                  git add .tracking/*

                  # Commit only if there are changes
                  if ! git diff --cached --quiet; then
                      HASH=$(git rev-parse --short HEAD)
                      git commit -m "Docs: backup Changelog and Todo for $HASH"
                      git push origin main
                  else
                      echo "No new backups to commit"
                  fi

            # --- Generate docs ---
            - name: Generate docs
              run: ./.github/scripts/update-docs.sh

            # --- Check for changes ---
            - name: Check for changes
              id: git-check
              run: |
                  git add Changelog.md Todo.md
                  if git diff --cached --quiet; then
                    echo "changes=false" >> $GITHUB_OUTPUT
                  else
                    echo "changes=true" >> $GITHUB_OUTPUT
                  fi

            # --- Force-update the branch ---
            - name: Force-update tracking branch
              if: steps.git-check.outputs.changes == 'true'
              run: |
                  git checkout -B tracking-updates
                  git commit -m "docs: update tracking documentation" || echo "No changes to commit"
                  git push origin tracking-updates --force

            # --- Create Pull Request ---
            - name: Create Pull Request
              if: steps.git-check.outputs.changes == 'true'
              uses: peter-evans/create-pull-request@v6
              with:
                  token: ${{ secrets.GH_PAT }}
                  branch: tracking-updates
                  base: main
                  commit-message: "docs: update tracking documentation"
                  title: "Update Tracking Documentation"
                  body: |
                      Automated documentation update

                      Updated files:
                      - Changelog.md
                      - Todo.md
                  add-paths: |
                      Changelog.md
                      Todo.md
